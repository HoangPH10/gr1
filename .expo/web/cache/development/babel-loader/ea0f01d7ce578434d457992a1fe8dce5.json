{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport React, { useState } from 'react';\nimport { launchCameraAsync, useCameraPermissions, PermissionStatus } from 'expo-image-picker';\nimport { Colors } from \"../../constants/color\";\nimport OutlinedButton from \"../UI/OutlinedButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ImagePicker(_ref) {\n  var onPickImage = _ref.onPickImage;\n\n  var _useCameraPermissions = useCameraPermissions(),\n      _useCameraPermissions2 = _slicedToArray(_useCameraPermissions, 2),\n      cameraPermissionInformation = _useCameraPermissions2[0],\n      requestPermission = _useCameraPermissions2[1];\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      pickedImage = _useState2[0],\n      setpickedImage = _useState2[1];\n\n  var verifyPermissions = function _callee() {\n    var permissionResponse;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(cameraPermissionInformation.status === PermissionStatus.UNDETERMINED)) {\n              _context.next = 5;\n              break;\n            }\n\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(requestPermission());\n\n          case 3:\n            permissionResponse = _context.sent;\n            return _context.abrupt(\"return\", permissionResponse.granted);\n\n          case 5:\n            if (!(cameraPermissionInformation.status === PermissionStatus.DENIED)) {\n              _context.next = 8;\n              break;\n            }\n\n            Alert.alert('Insufficient Permissions', 'You need to grant camera permissions to use this app.');\n            return _context.abrupt(\"return\", false);\n\n          case 8:\n            return _context.abrupt(\"return\", true);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var takeImageHander = function _callee2() {\n    var hasPermission, image;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(verifyPermissions());\n\n          case 2:\n            hasPermission = _context2.sent;\n\n            if (hasPermission) {\n              _context2.next = 5;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 5:\n            _context2.next = 7;\n            return _regeneratorRuntime.awrap(launchCameraAsync({\n              allowsEditing: true,\n              aspect: [16, 9],\n              quality: 0.5,\n              base64: true\n            }));\n\n          case 7:\n            image = _context2.sent;\n            setpickedImage(image.uri);\n            onPickImage({\n              uri: image.uri,\n              base64: image.base64\n            });\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var imagePreview = _jsx(Text, {\n    children: \"No image taken yet.\"\n  });\n\n  if (pickedImage) {\n    imagePreview = _jsx(Image, {\n      style: styles.image,\n      source: {\n        uri: pickedImage\n      }\n    });\n  }\n\n  return _jsxs(View, {\n    children: [_jsx(View, {\n      style: styles.imagePreview,\n      children: imagePreview\n    }), _jsx(OutlinedButton, {\n      icon: \"camera\",\n      onPress: takeImageHander,\n      children: \"Take Image\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  imagePreview: {\n    width: '100%',\n    height: 200,\n    marginVertical: 8,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: Colors.primary100,\n    borderRadius: 5\n  },\n  image: {\n    width: '100%',\n    height: '100%'\n  }\n});","map":{"version":3,"sources":["D:/Ha noi university of science and technology/ICT/Term 8/GR1/reports/file_report5/my-app/components/Texts/ImagePicker.js"],"names":["React","useState","launchCameraAsync","useCameraPermissions","PermissionStatus","Colors","OutlinedButton","ImagePicker","onPickImage","cameraPermissionInformation","requestPermission","pickedImage","setpickedImage","verifyPermissions","status","UNDETERMINED","permissionResponse","granted","DENIED","Alert","alert","takeImageHander","hasPermission","allowsEditing","aspect","quality","base64","image","uri","imagePreview","styles","StyleSheet","create","width","height","marginVertical","justifyContent","alignItems","backgroundColor","primary100","borderRadius"],"mappings":"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","sourcesContent":["import {View, Button, Alert, Text, StyleSheet, Image }from 'react-native'\r\nimport React, {useState} from 'react'\r\nimport { launchCameraAsync, useCameraPermissions, PermissionStatus} from 'expo-image-picker'\r\nimport { Colors } from '../../constants/color';\r\nimport OutlinedButton from '../UI/OutlinedButton';\r\n\r\nexport default function ImagePicker({onPickImage}) {\r\n    const [cameraPermissionInformation, requestPermission] = useCameraPermissions();\r\n    const [pickedImage, setpickedImage] = useState('')\r\n    const verifyPermissions = async() => {\r\n        if(cameraPermissionInformation.status === PermissionStatus.UNDETERMINED){\r\n            const permissionResponse = await requestPermission();\r\n            return permissionResponse.granted;\r\n        }\r\n        if(cameraPermissionInformation.status === PermissionStatus.DENIED){\r\n            Alert.alert('Insufficient Permissions',\r\n            'You need to grant camera permissions to use this app.');\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    const takeImageHander = async() => {\r\n        const hasPermission =  await verifyPermissions();\r\n        \r\n        if(!hasPermission){\r\n            return;\r\n        }\r\n        \r\n        const image =  await launchCameraAsync({\r\n            allowsEditing: true,\r\n            aspect: [16,9],\r\n            quality: 0.5,\r\n            base64: true\r\n        });\r\n        setpickedImage(image.uri);\r\n        onPickImage({uri: image.uri, base64: image.base64})\r\n    }\r\n\r\n    let imagePreview = <Text>No image taken yet.</Text>\r\n    if(pickedImage){\r\n        imagePreview = <Image  style={styles.image} source={{uri: pickedImage}} />\r\n    }\r\n\r\n    return (\r\n        <View>\r\n            <View style={styles.imagePreview}>\r\n                {imagePreview}\r\n            </View>\r\n            <OutlinedButton icon=\"camera\"  onPress={takeImageHander}>\r\n                Take Image\r\n            </OutlinedButton>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    imagePreview:{\r\n        width: '100%',\r\n        height: 200,\r\n        marginVertical: 8,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundColor: Colors.primary100,\r\n        borderRadius: 5,\r\n    },\r\n    image:{\r\n        width: '100%',\r\n        height: '100%',\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}