{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect } from 'react';\nimport TextList from \"../components/Texts/TextList\";\nimport { useIsFocused } from '@react-navigation/native';\nimport { fetchTexts } from \"../utils/database\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function AllTexts(_ref) {\n  var route = _ref.route;\n  var isFocused = useIsFocused();\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      loadedTexts = _React$useState2[0],\n      setLoadedTexts = _React$useState2[1];\n\n  var getLoadedTexts = function _callee() {\n    var texts;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetchTexts());\n\n          case 2:\n            texts = _context.sent;\n            setLoadedTexts(texts);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    if (isFocused) {\n      getLoadedTexts();\n    }\n  }, [isFocused]);\n  return _jsx(TextList, {\n    texts: loadedTexts\n  });\n}","map":{"version":3,"sources":["D:/Ha noi university of science and technology/ICT/Term 8/GR1/reports/file_report5/my-app/screens/AllTexts.js"],"names":["React","useEffect","TextList","useIsFocused","fetchTexts","AllTexts","route","isFocused","useState","loadedTexts","setLoadedTexts","getLoadedTexts","texts"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP;AACA,SAAQC,YAAR,QAA4B,0BAA5B;AACA,SAASC,UAAT;;AAGA,eAAe,SAASC,QAAT,OAA2B;AAAA,MAARC,KAAQ,QAARA,KAAQ;AACtC,MAAMC,SAAS,GAAGJ,YAAY,EAA9B;;AACA,wBAAsCH,KAAK,CAACQ,QAAN,CAAe,EAAf,CAAtC;AAAA;AAAA,MAAOC,WAAP;AAAA,MAAoBC,cAApB;;AAEA,MAAMC,cAAc,GAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACAP,UAAU,EADV;;AAAA;AACdQ,YAAAA,KADc;AAEpBF,YAAAA,cAAc,CAACE,KAAD,CAAd;;AAFoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAKAX,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIM,SAAJ,EAAc;AACVI,MAAAA,cAAc;AACjB;AACJ,GAJQ,EAIP,CAACJ,SAAD,CAJO,CAAT;AAOA,SACI,KAAC,QAAD;AAAU,IAAA,KAAK,EAAEE;AAAjB,IADJ;AAGH","sourcesContent":["import React, {useEffect} from 'react'\r\nimport TextList from '../components/Texts/TextList'\r\nimport {useIsFocused } from '@react-navigation/native' \r\nimport { fetchTexts } from '../utils/database';\r\n\r\n\r\nexport default function AllTexts({route}) {\r\n    const isFocused = useIsFocused();\r\n    const [loadedTexts, setLoadedTexts] = React.useState([])\r\n\r\n    const getLoadedTexts =  async() => {\r\n        const texts = await fetchTexts();\r\n        setLoadedTexts(texts);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isFocused){\r\n            getLoadedTexts();\r\n        }\r\n    },[isFocused])\r\n\r\n  \r\n    return (\r\n        <TextList texts={loadedTexts} />\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}